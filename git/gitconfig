[user]
  name = Gunar C. Gessner
	email = gunar@gunargessner.com
	signingkey = B01F094E13AB943A5D43341C5DFB0EAE9EC45D88
[core]
  editor = nvim
[merge]
  summary = true
[color]
  diff = auto
  status = auto
  branch = auto
  interactive = auto
  ui = auto

[color "branch"]
  current = green bold
  local = green
  remote = red bold
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold

[color "status"]
  added = green bold
  changed = yellow bold
  untracked = red
[core]
  # two-space tabs
  # pager = ~/.git-templates/hooks/commit-emoji.sh | less --raw-control-chars -FXS -x2 # less -FXRS -x2
  # pager = diff-so-fancy | less --tabs=2 -RFX
  whitespace = blank-at-eol, space-before-tab, tab-in-indent, blank-at-eof, trailing-space, cr-at-eol, tabwidth=2

[push]
  # 'git push' should only do the current branch, not all
  default = current

[diff]
  renames = copies
  mnemonicprefix = true

[help]
  autocorrect = 20

[merge]
  conflictstyle = diff3
  tool = meld
  # tool = mymeld
[mergetool "mymeld"]
    cmd = $HOME/.git-templates/mymeld.sh $BASE $LOCAL $REMOTE $MERGED

[alias]
  gone = ! "git fetch -p && git for-each-ref --format '%(refname:short) %(upstream:track)' | awk '$2 == \"[gone]\" {print $1}' | xargs -r git branch -D"
  delete-all-branches = "!f(){git branch | grep -v "master" | xargs git branch -D};f"
  c = clone
  cl = clean -fd
  f = fetch
  amend = commit -a --gpg-sign --amend --no-edit
  # changelog = !"git log --pretty=format:'- %s%n%b' --since='$(git show -s --format=%ad `git rev-list --tags --max-count=1`)'"
  # lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ci%x08%x08%x08%x08%x08%x08%x08%x08%x08)%Creset' --abbrev-commit --date=iso --decorate
  # who = shortlog -s --
  b        = branch
  # before   = "!f() { git rev-list -n 1 master --before=$1; }; f"
  # br       = for-each-ref --sort=committerdate --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
  # bugs     = checkout bugs
  # cherry   = cherry-pick
  cm       = commit --gpg-sign -m -v
  co       = checkout
  cor       = "!cor() { git fetch && git co $1 && git reset --hard origin/$1; }; cor"
  # d        = diff --word-diff
  # dev      = checkout dev
  # dmeld    = difftool --extcmd = meld
  # ds1      = diff --stat '@{1 day ago}'
  # fl       = log -u
  hist     = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
  l        = log --pretty=format:'%h %an, %ar: %s' --graph --stat --decorate
  # last-tag = !"git describe --tags `git rev-list --tags --max-count=1`"
  # lg       = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --decorate
  lg       = log --graph --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)â€” %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative
  lp       = log -p -w
  pick     = cherry-pick
  # m        = merge --no-ff
  master   = checkout master
  bkp      = "!bkp() { cur_branch=`git branch | grep '* ' | tr -d '* '` ; git branch -D bkp-$cur_branch 2>/dev/null; git branch bkp-$cur_branch; }; bkp"
  bkpo      = "!bkpo() { cur_branch=`git branch | grep '* ' | tr -d '* '` ; git branch -D bkp-origin-$cur_branch ; git checkout -b bkp-origin-$cur_branch ; git reset --hard origin/$cur_branch; git co $cur_branch; }; bkpo"
  # re: recent branches
  re = "!re() { git for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) (%(color:green)%(committerdate:relative)%(color:reset)) - %(contents:subject) - %(authorname)' | head -n 5; }; re"
  # rcb: reset current branch (from origin)
  rcb      = "!rcb() { cur_branch=`git branch | grep '* ' | tr -d '* '` ; git fetch && git reset --hard origin/$cur_branch; }; rcb"
  # conflicts
  conf      = "!f() { nvim `git diff --name-status --diff-filter=U | cut -f 2-`; }; f"
  # continue
  cont      = "!f() { git add . && git rebase --continue; }; f"
  # abort
  ab        = "rebase --abort"
  resetm   = "!resetm() { git pom && git reset origin/master; }; resetm"
  pom      = "!pom() { git branch -D master;git checkout -b master && git rcb && git checkout -; }; pom"
  pod      = "!pod() { git branch -D develop;git checkout -b develop && git rcb && git checkout -; }; pod"
  meld     = mergetool
  # merge-to = "!gitmergeto() { export tmp_branch=`git branch | grep '* ' | tr -d '* '` && git checkout $1 && git merge $tmp_branch && git checkout $tmp_branch; unset tmp_branch; }; gitmergeto"
  # mpush    = "! export tmp_branch=`git branch | grep '* ' | tr -d '* '` && git push origin && git merge master && git checkout master && git merge --no-ff $tmp_branch && git push origin && git branch -d $tmp_branch && git push origin :$tmp_branch"
  reb      = rebase
  s        = status --short --branch
  sho      = show -w
  st       = status
  t        = !"git tag -a v`date +"%Y-%m-%d-%H-%M-%S"` -m"
  tags     = tag
  tl       = tag -l -n1
  wc       = whatchanged -p
  fpr     = "!fpr() { git fetch origin pull/$1/head:pull_$1 && git checkout pull_$1; }; fpr"

[rerere]
  enabled = true
[init]
	templatedir = ~/.git-templates
	defaultBranch = main
[advice]
  detachedhead=false
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[commit]
	gpgsign = true

# delta diffing tool https://github.com/dandavison/delta
[pager]
  diff = delta
  log = delta
  reflog = delta
  show = delta
[interactive]
  diffFilter = delta --color-only
[delta]
  features = side-by-side line-numbers decorations
  syntax-theme = Dracula
  plus-style = syntax "#003800"
  minus-style = syntax "#3f0001"
  whitespace-error-style = 22 reverse
[delta "decorations"]
    commit-decoration-style = bold yellow box ul
    file-style = bold yellow ul
    file-decoration-style = none
